
package converterapp;

import java.awt.Color;
import java.awt.event.ItemEvent;
import java.math.RoundingMode;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import javax.swing.JFormattedTextField;
import javax.swing.JFormattedTextField.AbstractFormatter;
import javax.swing.JOptionPane;
import javax.swing.JSpinner;
import javax.swing.text.InternationalFormatter;

/**
 *
 * @author Azhar, Alex, Jeydan, Russel
 */
public class ConverterView extends javax.swing.JPanel{
    private final String[] ISUnits = {"centimetre","metre","kilometre","celcius"};
    private final String[] USUnits = {"inch","feet","yard","mile","fahrenheit"};
    //private ConverterFormulas cf;
    /**
     * Creates new form ConverterView
     */
    public ConverterView() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel2 = new javax.swing.JPanel();
        lb_title = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        cbox_sourceUnit = new javax.swing.JComboBox(ISUnits);
        cbox_targetUnit = new javax.swing.JComboBox(USUnits);
        btn_convert = new javax.swing.JButton();
        toggleBtn_switch = new javax.swing.JToggleButton();
        sp_numberAfterDecimal = new javax.swing.JSpinner();
        txt_sourceUnit = new javax.swing.JFormattedTextField();
        txt_targetUnit = new javax.swing.JFormattedTextField();

        setLayout(new java.awt.BorderLayout());

        jPanel2.setLayout(new java.awt.BorderLayout());

        lb_title.setFont(new java.awt.Font("Arial Narrow", 1, 18)); // NOI18N
        lb_title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lb_title.setText("Converter Application");
        jPanel2.add(lb_title, java.awt.BorderLayout.CENTER);

        add(jPanel2, java.awt.BorderLayout.PAGE_START);

        jPanel1.setLayout(new java.awt.GridBagLayout());

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel4.setText("Fraction Digits");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(jLabel4, gridBagConstraints);

        cbox_sourceUnit.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbox_sourceUnitItemStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 20;
        jPanel1.add(cbox_sourceUnit, gridBagConstraints);

        cbox_targetUnit.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbox_targetUnitItemStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 20;
        jPanel1.add(cbox_targetUnit, gridBagConstraints);

        btn_convert.setText("Convert");
        btn_convert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_convertActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(btn_convert, gridBagConstraints);

        toggleBtn_switch.setText("Switch");
        toggleBtn_switch.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                toggleBtn_switchItemStateChanged(evt);
            }
        });
        toggleBtn_switch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toggleBtn_switchActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 2;
        jPanel1.add(toggleBtn_switch, gridBagConstraints);

        sp_numberAfterDecimal.setModel(new javax.swing.SpinnerNumberModel(5, 1, 9, 1));
        JFormattedTextField tf = ((JSpinner.DefaultEditor) sp_numberAfterDecimal.getEditor()).getTextField();
        tf.setEditable(false);
        tf.setBackground(Color.white);
        sp_numberAfterDecimal.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sp_numberAfterDecimalStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(sp_numberAfterDecimal, gridBagConstraints);

        txt_sourceUnit.setFormatterFactory(new CostumeFormatter(5));
        txt_sourceUnit.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        txt_sourceUnit.setValue(0);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(txt_sourceUnit, gridBagConstraints);

        txt_targetUnit.setEditable(false);
        txt_targetUnit.setFormatterFactory(new CostumeFormatter(5));
        txt_targetUnit.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        txt_targetUnit.setValue(0);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(txt_targetUnit, gridBagConstraints);

        add(jPanel1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void toggleBtn_switchItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_toggleBtn_switchItemStateChanged
        // TODO add your handling code here:
        int selectedSourceIndex = cbox_sourceUnit.getSelectedIndex();
        int selectedTargetIndex = cbox_targetUnit.getSelectedIndex();
        if(evt.getStateChange() == ItemEvent.DESELECTED){
            cbox_sourceUnit.setModel(new javax.swing.DefaultComboBoxModel(ISUnits));
            cbox_targetUnit.setModel(new javax.swing.DefaultComboBoxModel(USUnits));          
        } else {
            cbox_sourceUnit.setModel(new javax.swing.DefaultComboBoxModel(USUnits));
            cbox_targetUnit.setModel(new javax.swing.DefaultComboBoxModel(ISUnits));
        }
        cbox_sourceUnit.setSelectedIndex(selectedTargetIndex);
        cbox_targetUnit.setSelectedIndex(selectedSourceIndex);
    }//GEN-LAST:event_toggleBtn_switchItemStateChanged

    private void cbox_sourceUnitItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbox_sourceUnitItemStateChanged
        // TODO add your handling code here:
        if(cbox_sourceUnit.getSelectedItem().equals("celcius")){
            if(!cbox_targetUnit.getSelectedItem().equals("fahrenheit")){
                cbox_targetUnit.setSelectedItem("fahrenheit");
            }
        } else if(cbox_sourceUnit.getSelectedItem().equals("fahrenheit")){
            if(!cbox_targetUnit.getSelectedItem().equals("celcius")){
                cbox_targetUnit.setSelectedItem("celcius");
            }
        }
        
    }//GEN-LAST:event_cbox_sourceUnitItemStateChanged

    private void cbox_targetUnitItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbox_targetUnitItemStateChanged
        if(cbox_targetUnit.getSelectedItem().equals("fahrenheit")){
            if(!cbox_sourceUnit.getSelectedItem().equals("celcius")){
                cbox_sourceUnit.setSelectedItem("celcius");
            }
        } else if(cbox_targetUnit.getSelectedItem().equals("celcius")){
            if(!cbox_sourceUnit.getSelectedItem().equals("fahrenheit")){
                cbox_sourceUnit.setSelectedItem("fahrenheit");
            }
        }
       
    }//GEN-LAST:event_cbox_targetUnitItemStateChanged

    private void toggleBtn_switchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toggleBtn_switchActionPerformed
        
    }//GEN-LAST:event_toggleBtn_switchActionPerformed

    private void sp_numberAfterDecimalStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sp_numberAfterDecimalStateChanged
        // TODO add your handling code here:
        txt_sourceUnit.setValue(0.0);
        txt_targetUnit.setValue(0.0);
        txt_sourceUnit.setFormatterFactory(new CostumeFormatter(Integer.parseInt(sp_numberAfterDecimal.getValue().toString())));
        txt_targetUnit.setFormatterFactory(new CostumeFormatter(Integer.parseInt(sp_numberAfterDecimal.getValue().toString())));
    }//GEN-LAST:event_sp_numberAfterDecimalStateChanged

    private void btn_convertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_convertActionPerformed
        // TODO add your handling code here:
        String sourceUnit = cbox_sourceUnit.getSelectedItem().toString();
        String targetUnit = cbox_targetUnit.getSelectedItem().toString();
        Formulas f = new Formulas(Double.parseDouble(txt_sourceUnit.getValue().toString()));
        
        double value = f.getValue(sourceUnit, targetUnit);
        if(value == -1){
            JOptionPane.showMessageDialog(this, "the units are invalid");
            txt_sourceUnit.setValue(0.0);
            txt_targetUnit.setValue(0.0);
            return;
        }
        
        txt_targetUnit.setValue(value);
//        
    }//GEN-LAST:event_btn_convertActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_convert;
    private javax.swing.JComboBox cbox_sourceUnit;
    private javax.swing.JComboBox cbox_targetUnit;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel lb_title;
    private javax.swing.JSpinner sp_numberAfterDecimal;
    private javax.swing.JToggleButton toggleBtn_switch;
    private javax.swing.JFormattedTextField txt_sourceUnit;
    private javax.swing.JFormattedTextField txt_targetUnit;
    // End of variables declaration//GEN-END:variables
    
    class CostumeFormatter extends JFormattedTextField.AbstractFormatterFactory{
        
        private int maximumFractionDigits;
        
        CostumeFormatter(int maximumFractionDigits){
            this.maximumFractionDigits = maximumFractionDigits;
        }
        
        @Override
        public AbstractFormatter getFormatter(JFormattedTextField tf) {
            NumberFormat format = DecimalFormat.getInstance();
                format.setMinimumFractionDigits(1);
                format.setMaximumFractionDigits(maximumFractionDigits);
                format.setRoundingMode(RoundingMode.HALF_UP);
                InternationalFormatter formatter = new InternationalFormatter(format);
                formatter.setAllowsInvalid(false);
                return formatter;
        }
    }
}